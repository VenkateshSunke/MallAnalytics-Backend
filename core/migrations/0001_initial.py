# Generated by Django 5.2.3 on 2025-06-12 12:24

import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Store",
            fields=[
                (
                    "id",
                    models.CharField(max_length=255, primary_key=True, serialize=False),
                ),
                ("name", models.CharField(max_length=255)),
                ("category", models.CharField(max_length=255)),
                ("polygon", models.JSONField()),
                ("is_mapped", models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name="Camera",
            fields=[
                (
                    "id",
                    models.CharField(max_length=255, primary_key=True, serialize=False),
                ),
                ("position", models.JSONField()),
                ("orientation", models.FloatField()),
                ("fov_angle", models.FloatField()),
                ("fov_range", models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name="Interest",
            fields=[
                (
                    "interest_id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name="MallStore",
            fields=[
                (
                    "store_code",
                    models.CharField(max_length=255, primary_key=True, serialize=False),
                ),
                ("store_name", models.CharField(max_length=255)),
                (
                    "pattern_characterstic_1",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "pattern_characterstic_2",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "pattern_characterstic_3",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
            ],
        ),
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "user_id",
                    models.CharField(max_length=255, primary_key=True, serialize=False),
                ),
                ("name", models.CharField(blank=True, max_length=255, null=True)),
                ("email", models.EmailField(blank=True, max_length=254, null=True)),
                ("date_of_birth", models.DateField(blank=True, null=True)),
                ("address", models.TextField(blank=True, null=True)),
                ("cell_phone", models.CharField(blank=True, max_length=20, null=True)),
                ("picture_url", models.TextField(blank=True, null=True)),
                ("profiling_questions", models.TextField(blank=True, null=True)),
                ("monthly_visits", models.IntegerField(blank=True, null=True)),
                ("yearly_visits", models.IntegerField(blank=True, null=True)),
                ("life_visits", models.IntegerField(blank=True, null=True)),
                (
                    "avg_time_per_visit_year",
                    models.DurationField(blank=True, null=True),
                ),
                (
                    "avg_time_per_visit_life",
                    models.DurationField(blank=True, null=True),
                ),
                ("stores_visited_month", models.IntegerField(blank=True, null=True)),
                ("stores_visited_life", models.IntegerField(blank=True, null=True)),
                ("first_visit", models.DateField(blank=True, null=True)),
                ("last_visit", models.DateField(blank=True, null=True)),
                ("recency", models.IntegerField(blank=True, null=True)),
                ("monthly_freq", models.IntegerField(blank=True, null=True)),
                ("pattern_1", models.CharField(blank=True, max_length=255, null=True)),
                ("pattern_2", models.CharField(blank=True, max_length=255, null=True)),
                ("pattern_3", models.CharField(blank=True, max_length=255, null=True)),
                ("pattern_4", models.CharField(blank=True, max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="Calibration",
            fields=[
                (
                    "store",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        primary_key=True,
                        related_name="calibration",
                        serialize=False,
                        to="core.store",
                    ),
                ),
                ("matrix", models.JSONField()),
            ],
        ),
        migrations.CreateModel(
            name="Visit",
            fields=[
                ("visit_id", models.AutoField(primary_key=True, serialize=False)),
                ("start_time", models.DateTimeField(blank=True, null=True)),
                ("end_time", models.DateTimeField(blank=True, null=True)),
                ("duration", models.DurationField(blank=True, null=True)),
                ("visit_date", models.DateField(blank=True, null=True)),
                ("stores_visited", models.IntegerField(blank=True, null=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="visits",
                        to="core.user",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="UserMovement",
            fields=[
                ("movement_id", models.AutoField(primary_key=True, serialize=False)),
                ("start_time", models.DateTimeField(blank=True, null=True)),
                ("end_time", models.DateTimeField(blank=True, null=True)),
                ("situation", models.CharField(max_length=255)),
                ("camera_id", models.CharField(max_length=255)),
                ("location", models.CharField(max_length=255)),
                (
                    "store",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="movements",
                        to="core.mallstore",
                    ),
                ),
                (
                    "visit",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="movements",
                        to="core.visit",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="UserInterest",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("source", models.CharField(max_length=255)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "interest",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="users",
                        to="core.interest",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="interests",
                        to="core.user",
                    ),
                ),
            ],
            options={
                "unique_together": {("user", "interest")},
            },
        ),
    ]
