services:
  redis:
    build:
      context: ./
      dockerfile: ./Dockerfiles/redis.Dockerfile
    container_name: redis-server
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/redis/data
      - ./redis/redis.conf:/etc/redis/redis.conf
      - ./redis/users.acl:/users.acl
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "$REDIS_PASSWORD", "ping"]
      interval: 30m
      timeout: 10s
      retries: 3
    logging:
      driver: "json-file"
      options:
        max-size: "1k"
        max-file: "3"

  celery_worker:
    build:
      context: ./
      dockerfile: ./Dockerfiles/worker.Dockerfile
    container_name: celery_worker
    restart: unless-stopped
    command: >
      python -m debugpy --listen 0.0.0.0:5678 -m celery -A wise_backend.celery worker -l info -E --pool=prefork --autoscale=2,1 -Q default,qws
    volumes:
      - .:/app
    networks:
      - app-network
    depends_on:
      - redis
    ports:
      - "5678:5678"
    environment:
      - GEVENT_SUPPORT=True
      - CELERY_BROKER_URL=redis://${REDIS_USER}:${REDIS_PASSWORD}@redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - REDIS_HOST=redis
    logging:
      driver: "json-file"
      options:
        max-size: "1k"
        max-file: "3"

  beat:
    build:
      context: ./
      dockerfile: ./Dockerfiles/worker.Dockerfile
    container_name: celery_beat
    restart: unless-stopped
    command: >
      celery -A wise_backend beat -l info
    volumes:
      - .:/app
    networks:
      - app-network
    depends_on:
      - redis
    environment:
      - CELERY_BROKER_URL=redis://${REDIS_USER}:${REDIS_PASSWORD}@redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - REDIS_HOST=redis
    logging:
      driver: "json-file"
      options:
        max-size: "1k"
        max-file: "3"

  django:
    build:
      context: ./
      dockerfile: ./Dockerfiles/django.Dockerfile
    container_name: django
    restart: unless-stopped
    volumes:
      - .:/app
    networks:
      - app-network
    command: >
      sh -c "python manage.py migrate && python -m debugpy --listen 0.0.0.0:5680 -m manage runserver 0.0.0.0:8000"
    ports:
      - "8000:8000"
      - "5680:5680"
    environment:
      - CELERY_BROKER_URL=redis://${REDIS_USER}:${REDIS_PASSWORD}@redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - REDIS_HOST=redis
    depends_on:
      - redis
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9000 || exit 1"]
      interval: 15m
      timeout: 10s
      retries: 3
    logging:
      driver: "json-file"
      options:
        max-size: "1k"
        max-file: "3"

volumes:
  redis-data:

networks:
  app-network:
    driver: bridge
